add to docker compose:
nginx:
    image: "nginx:latest"
    container_name: "nginx"
    restart: "unless-stopped"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./ssl:/etc/nginx/ssl"      
      - "./nginx-conf/nginx.conf:/etc/nginx/nginx.conf"

where docker-compose is, as root:

mkdir -p ./ssl
openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
  -keyout ./ssl/selfsigned.key \
  -out ./ssl/selfsigned.crt \
  -subj "/C=US/ST=State/L=City/O=Organization/OU=Unit/CN=192.168.27.45"
mkdir -p ./nginx-conf
cd nginx-conf

then create a file nginx.conf:
# nginx.conf
events {
    worker_connections 1024; # Adjust as needed
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # HTTPS Server Configuration
    server {
        listen 80;
        server_name 192.168.27.45;

        # Redirect HTTP to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name 192.168.27.45;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/selfsigned.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers on;

        # Proxy to the Application
        location / {
            proxy_pass http://loyalty-app:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}